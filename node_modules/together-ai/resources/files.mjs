// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../core/resource.mjs";
import { buildHeaders } from "../internal/headers.mjs";
import { path } from "../internal/utils/path.mjs";
export class Files extends APIResource {
    /**
     * List the metadata for a single uploaded data file.
     *
     * @example
     * ```ts
     * const file = await client.files.retrieve('id');
     * ```
     */
    retrieve(id, options) {
        return this._client.get(path `/files/${id}`, options);
    }
    /**
     * List the metadata for all uploaded data files.
     *
     * @example
     * ```ts
     * const files = await client.files.list();
     * ```
     */
    list(options) {
        return this._client.get('/files', options);
    }
    /**
     * Delete a previously uploaded data file.
     *
     * @example
     * ```ts
     * const file = await client.files.delete('id');
     * ```
     */
    delete(id, options) {
        return this._client.delete(path `/files/${id}`, options);
    }
    /**
     * Get the contents of a single uploaded data file.
     *
     * @example
     * ```ts
     * const response = await client.files.content('id');
     *
     * const content = await response.blob();
     * console.log(content);
     * ```
     */
    content(id, options) {
        return this._client.get(path `/files/${id}/content`, {
            ...options,
            headers: buildHeaders([{ Accept: 'application/binary' }, options?.headers]),
            __binaryResponse: true,
        });
    }
    /**
     * Upload a file.
     */
    upload(_) {
        throw 'please use together-ai/lib/upload';
    }
}
//# sourceMappingURL=files.mjs.map