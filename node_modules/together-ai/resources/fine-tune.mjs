// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../core/resource.mjs";
import { path } from "../internal/utils/path.mjs";
export class FineTuneResource extends APIResource {
    /**
     * Create a fine-tuning job with the provided model and training data.
     *
     * @example
     * ```ts
     * const fineTune = await client.fineTune.create({
     *   model: 'model',
     *   training_file: 'training_file',
     * });
     * ```
     */
    create(body, options) {
        return this._client.post('/fine-tunes', { body, ...options });
    }
    /**
     * List the metadata for a single fine-tuning job.
     *
     * @example
     * ```ts
     * const fineTune = await client.fineTune.retrieve('id');
     * ```
     */
    retrieve(id, options) {
        return this._client.get(path `/fine-tunes/${id}`, options);
    }
    /**
     * List the metadata for all fine-tuning jobs. Returns a list of
     * FinetuneResponseTruncated objects.
     *
     * @example
     * ```ts
     * const fineTunes = await client.fineTune.list();
     * ```
     */
    list(options) {
        return this._client.get('/fine-tunes', options);
    }
    /**
     * Cancel a currently running fine-tuning job. Returns a FinetuneResponseTruncated
     * object.
     *
     * @example
     * ```ts
     * const response = await client.fineTune.cancel('id');
     * ```
     */
    cancel(id, options) {
        return this._client.post(path `/fine-tunes/${id}/cancel`, options);
    }
    /**
     * Download a compressed fine-tuned model or checkpoint to local disk.
     *
     * @example
     * ```ts
     * const response = await client.fineTune.download({
     *   ft_id: 'ft_id',
     * });
     * ```
     */
    download(query, options) {
        return this._client.get('/finetune/download', { query, ...options });
    }
    /**
     * List the events for a single fine-tuning job.
     *
     * @example
     * ```ts
     * const response = await client.fineTune.listEvents('id');
     * ```
     */
    listEvents(id, options) {
        return this._client.get(path `/fine-tunes/${id}/events`, options);
    }
    /**
     * List the checkpoints for a single fine-tuning job.
     *
     * @example
     * ```ts
     * const response = await client.fineTune.retrieveCheckpoints(
     *   'id',
     * );
     * ```
     */
    retrieveCheckpoints(id, options) {
        return this._client.get(path `/fine-tunes/${id}/checkpoints`, options);
    }
}
//# sourceMappingURL=fine-tune.mjs.map