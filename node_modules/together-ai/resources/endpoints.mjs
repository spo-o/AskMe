// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../core/resource.mjs";
import { buildHeaders } from "../internal/headers.mjs";
import { path } from "../internal/utils/path.mjs";
export class Endpoints extends APIResource {
    /**
     * Creates a new dedicated endpoint for serving models. The endpoint will
     * automatically start after creation. You can deploy any supported model on
     * hardware configurations that meet the model's requirements.
     *
     * @example
     * ```ts
     * const endpoint = await client.endpoints.create({
     *   autoscaling: { max_replicas: 5, min_replicas: 2 },
     *   hardware: '1x_nvidia_a100_80gb_sxm',
     *   model: 'meta-llama/Llama-3-8b-chat-hf',
     * });
     * ```
     */
    create(body, options) {
        return this._client.post('/endpoints', { body, ...options });
    }
    /**
     * Retrieves details about a specific endpoint, including its current state,
     * configuration, and scaling settings.
     *
     * @example
     * ```ts
     * const endpoint = await client.endpoints.retrieve(
     *   'endpoint-d23901de-ef8f-44bf-b3e7-de9c1ca8f2d7',
     * );
     * ```
     */
    retrieve(endpointID, options) {
        return this._client.get(path `/endpoints/${endpointID}`, options);
    }
    /**
     * Updates an existing endpoint's configuration. You can modify the display name,
     * autoscaling settings, or change the endpoint's state (start/stop).
     *
     * @example
     * ```ts
     * const endpoint = await client.endpoints.update(
     *   'endpoint-d23901de-ef8f-44bf-b3e7-de9c1ca8f2d7',
     * );
     * ```
     */
    update(endpointID, body, options) {
        return this._client.patch(path `/endpoints/${endpointID}`, { body, ...options });
    }
    /**
     * Returns a list of all endpoints associated with your account. You can filter the
     * results by type (dedicated or serverless).
     *
     * @example
     * ```ts
     * const endpoints = await client.endpoints.list();
     * ```
     */
    list(query = {}, options) {
        return this._client.get('/endpoints', { query, ...options });
    }
    /**
     * Permanently deletes an endpoint. This action cannot be undone.
     *
     * @example
     * ```ts
     * await client.endpoints.delete(
     *   'endpoint-d23901de-ef8f-44bf-b3e7-de9c1ca8f2d7',
     * );
     * ```
     */
    delete(endpointID, options) {
        return this._client.delete(path `/endpoints/${endpointID}`, {
            ...options,
            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),
        });
    }
}
//# sourceMappingURL=endpoints.mjs.map