"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Files = void 0;
const resource_1 = require("../core/resource.js");
const headers_1 = require("../internal/headers.js");
const path_1 = require("../internal/utils/path.js");
class Files extends resource_1.APIResource {
    /**
     * List the metadata for a single uploaded data file.
     *
     * @example
     * ```ts
     * const file = await client.files.retrieve('id');
     * ```
     */
    retrieve(id, options) {
        return this._client.get((0, path_1.path) `/files/${id}`, options);
    }
    /**
     * List the metadata for all uploaded data files.
     *
     * @example
     * ```ts
     * const files = await client.files.list();
     * ```
     */
    list(options) {
        return this._client.get('/files', options);
    }
    /**
     * Delete a previously uploaded data file.
     *
     * @example
     * ```ts
     * const file = await client.files.delete('id');
     * ```
     */
    delete(id, options) {
        return this._client.delete((0, path_1.path) `/files/${id}`, options);
    }
    /**
     * Get the contents of a single uploaded data file.
     *
     * @example
     * ```ts
     * const response = await client.files.content('id');
     *
     * const content = await response.blob();
     * console.log(content);
     * ```
     */
    content(id, options) {
        return this._client.get((0, path_1.path) `/files/${id}/content`, {
            ...options,
            headers: (0, headers_1.buildHeaders)([{ Accept: 'application/binary' }, options?.headers]),
            __binaryResponse: true,
        });
    }
    /**
     * Upload a file.
     */
    upload(_) {
        throw 'please use together-ai/lib/upload';
    }
}
exports.Files = Files;
//# sourceMappingURL=files.js.map